version: '3.3'

volumes:
  jmeter_dir:
  jenkins-home:
  #elasticsearch:
  liquibase_dir:

networks:
  prodnetwork:
    driver: bridge

services:
 nexus:
  hostname: nexus
  image: sonatype/nexus3
  #build: ./nexus
  ports:
    - "18081:8081"
  networks:
    - prodnetwork

 jenkins:
  hostname: jenkins
  #image: systemdevformations/jenkins-sonar:v3
  build: ./jenkins
  ports:
    - "18080:8080"
    - "50000:50000"
  networks:
    - prodnetwork
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/bin/docker:/usr/bin/docker
    - jenkins-home:/var/jenkins_home
    - jmeter_dir:/jmeter
    - liquibase_dir:/liquibase
  depends_on:
    - nexus
    - sonar
    - jmeter
    - liquibase
    #- gitlab-ce
  environment:
    - NEXUS_PORT=8081
    - SONAR_PORT=9000
    - SONAR_DB_PORT=5432

 sonar:
  hostname: sonar
  #image: systemdevformations/sonar-cicd:v1
  image: sonarqube
  ports:
   - "19000:9000"
   #- "5432:5432"
  networks:
    - prodnetwork
  #depends_on:
  #  - sonardb
  #environment:
  # - SONARQUBE_JDBC_URL=jdbc:postgresql://sonardb:5432/sonar
  # - SONARQUBE_JDBC_USERNAME=sonar
  # - SONARQUBE_JDBC_PASSWORD=sonar

 #sonardb:
  #hostname: sonardb
  #networks:
  #  - prodnetwork
  #image: postgres
  #environment:
  # - POSTGRES_USER=sonar
  # - POSTGRES_PASSWORD=sonar
  #volumes:
  #  - /opt/postgres/data:/var/lib/postgresql/data

 jmeter:
   hostname: jmeter
   build: ./jmeter
   command: tail -f /dev/null
   networks:
     - prodnetwork
   volumes:
     - jmeter_dir:/jmeter
     - /opt/jmeter/results:/results
     - /opt/jmeter/scripts:/scripts

 liquibase:
   hostname: liquibase
   build: ./liquibase
   command: tail -f /dev/null
   networks:
     - prodnetwork
   volumes:
     - liquibase_dir:/liquibase

 #gitlab-ce:
 # hostname: gitlab-ce
 # networks:
 #   - prodnetwork
 # image: gitlab/gitlab-ce:latest
 # environment:
 #   GITLAB_OMNIBUS_CONFIG: |
 #     gitlab_rails['gitlab_shell_ssh_port'] = 2222
 # ports:
 #   - "443:443"
 #   - "8080:80"
 #   - "2222:22"
 # volumes:
 #   - /opt/gitlab/config:/etc/gitlab
 #   - /opt/gitlab/logs:/var/log/gitlab
 #   - /opt/gitlab/data:/var/opt/gitlab

 seleniumhub:
  image: selenium/hub
  ports:
    - "4444:4444"
  volumes:
    - /opt/selenium:/tmp
  networks:
    - prodnetwork
  #environment:
  #  - JAVA_OPTS="-Dwebdriver.chrome.whitelistedIps="
 firefox:
  image: selenium/node-firefox
  depends_on:
    - seleniumhub
  environment:
    - HUB_PORT_4444_TCP_ADDR=seleniumhub
    - HUB_PORT_4444_TCP_PORT=4444
  networks:
    - prodnetwork
 chrome:
  image: selenium/node-chrome
  depends_on:
    - seleniumhub
  environment:
    - HUB_PORT_4444_TCP_ADDR=seleniumhub
    - HUB_PORT_4444_TCP_PORT=4444
  networks:
    - prodnetwork
 #elasticsearch:
 #  build:
 #    context: ./elasticsearch/
 #    args:
 #      ELK_VERSION: $ELK_VERSION
 #  volumes:
 #    - type: bind
 #      source: ./elasticsearch/config/elasticsearch.yml
 #      target: /usr/share/elasticsearch/config/elasticsearch.yml
 #      read_only: true
 #    - type: volume
 #      source: elasticsearch
 #      target: /usr/share/elasticsearch/data
 #  ports:
 #    - "9200:9200"
 #    - "9300:9300"
 #  environment:
 #    ES_JAVA_OPTS: "-Xmx256m -Xms256m"
 #    ELASTIC_PASSWORD: changeme
 #  networks:
 #    - prodnetwork

 #logstash:
 #  build:
 #    context: ./logstash/
 #    args:
 #      ELK_VERSION: $ELK_VERSION
 #  volumes:
 #    - type: bind
 #      source: ./logstash/config/logstash.yml
 #      target: /usr/share/logstash/config/logstash.yml
 #      read_only: true
 #    - type: bind
 #      source: ./logstash/pipeline
 #      target: /usr/share/logstash/pipeline
 #      read_only: true
 #  ports:
 #    - "5000:5000"
 #    - "9600:9600"
 #  environment:
 #    LS_JAVA_OPTS: "-Xmx256m -Xms256m"
 #  networks:
 #    - prodnetwork
 #  depends_on:
 #    - elasticsearch

 #kibana:
 #  build:
 #    context: ./kibana/
 #    args:
 #      ELK_VERSION: $ELK_VERSION
 #  volumes:
 #    - type: bind
 #      source: ./kibana/config/kibana.yml
 #      target: /usr/share/kibana/config/kibana.yml
 #      read_only: true
 #  ports:
 #    - "5601:5601"
 #  networks:
 #    - prodnetwork
 #  depends_on:
 #    - elasticsearch

 #db:
 #  hostname: postgres
 #  image: systemdevformations/docker-postgres12
 #  volumes:
 #    - /opt/jenkins/postgres:/var/lib/postgresql/data
 #  environment:
 #    POSTGRES_PASSWORD: password
 #  ports:
 #    - 5432:5432
 #  networks:
 #    - prodnetwork